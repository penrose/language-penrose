scopeName: 'source.penrose.style'
name: 'Penrose Style'
fileTypes: [
  'sty'
]

patterns: [
  {
      begin: '/\\*'
      end: '\\*/'
      name: 'comment.block.penrose.style'
  }
  {
      begin: '--'
      end: '\n'
      name: 'comment.line.penrose.style'
  }
  {
     match: '(\\b(Set|Reals|Real|Point|Function|Interval|OpenInterval|ClosedInterval|LeftClopenInterval|RightClopenInterval|CreateInterval|CreateOpenInterval|CreateClosedInterval|CreateLeftClopenInterval|CreateRightClopenInterval|CreateFunction|Pt|union|intersection|derivativeAtP|derivativeOverD|integral|apply|compose|Bounded|LeftBounded|RightBounded|Unbounded|Compact|Disconnected|Degenerate|Empty|Continuous|Discontinuous|Differentiable|Integrable|Invertible|Monotonic|Decreasing|Increasing|In|In2|Subset|LessThan|ClosedEnd|OpenEnd)\\b)'
     name: 'support.type.penrose.style'
  }
  {
      match: '\\b[a-zA-Z0-9_\.]+\\s*(?=\=)'
      name: 'support.variable'
  }
  {
      match: '\\b-?(?=[1-9]|0(?!\\d))\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b'
      name: 'support.constant'
  }
  {
      match: '\\b(OPTIMIZED)\\b'
      name: 'support.constant'
  }
  {
      match: '(where|with|plugin)'
      name: 'keyword.other'
  }
  {
      match: '(delete|override|ensure|encourage)'
      name: 'keyword.other'
  }
  { include: '#quoted' }
  { include: '#plugin' }
]

repository:
    quoted:
        match: '\\`[A-z]*\\`'
        name: 'string.quoted.penrose.style'
    quoted:
        match: '\\"(-|[A-z0-9._])+\\"'
        name: 'string.quoted.penrose.style'
